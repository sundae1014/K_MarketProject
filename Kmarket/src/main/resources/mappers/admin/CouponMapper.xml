<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.kmarket.mapper.admin.CouponMapper">

    <!-- ✅ 컬럼 ↔ DTO 매핑 -->
    <resultMap id="couponMap" type="kr.co.kmarket.dto.CouponDTO">
        <result column="COUPON_NO" property="couponNo"/>
        <result column="COUPON_TYPE" property="couponType"/>
        <result column="COUPON_NAME" property="couponName"/>
        <result column="BENEFIT" property="benefit"/>
        <result column="USE_PERIOD" property="usePeriod"/>
        <result column="ISSUER" property="issuer"/>
        <result column="ISSUE_DATE" property="issueDate"/>
        <result column="STATUS" property="status"/>
        <result column="MANAGE" property="manage"/>
        <result column="SAYOUNG" property="sayoung"/>
        <result column="BARGUP" property="bargup"/>
        <result column="COUPON_ISSUE" property="couponIssue"/>
    </resultMap>

    <!-- ✅ 쿠폰 등록 -->
    <insert id="insertCoupon" parameterType="kr.co.kmarket.dto.CouponDTO">
        INSERT INTO COUPON (
            COUPON_NO, COUPON_TYPE, COUPON_NAME, BENEFIT,
            USE_PERIOD, ISSUER, ISSUE_DATE,
            STATUS, MANAGE, SAYOUNG, BARGUP, COUPON_ISSUE
        )
        VALUES (
                   COUPON_SEQ.NEXTVAL,
                   #{couponType,jdbcType=INTEGER},
                   #{couponName,jdbcType=VARCHAR},
                   #{benefit,jdbcType=VARCHAR},
                   #{usePeriod,jdbcType=VARCHAR},
                   #{issuer,jdbcType=VARCHAR},
                   #{issueDate,jdbcType=DATE},
                   #{status,jdbcType=VARCHAR},
                   #{manage,jdbcType=VARCHAR},
                   #{sayoung,jdbcType=INTEGER},
                   #{bargup,jdbcType=INTEGER},
                   0
               )
    </insert>

    <!-- ✅ 전체 목록 (페이징) -->
    <select id="selectCouponsByPage" resultMap="couponMap">
        SELECT * FROM (
                          SELECT ROWNUM AS rnum, C.* FROM (
                                                              SELECT * FROM COUPON ORDER BY COUPON_NO DESC
                                                          ) C
                          WHERE ROWNUM &lt;= #{offset} + #{size}
                      )
        WHERE rnum &gt; #{offset}
    </select>

    <!-- ✅ 전체 개수 -->
    <select id="countCoupons" resultType="int">
        SELECT COUNT(*) FROM COUPON
    </select>

    <!-- ✅ 검색 + 페이징 -->
    <select id="searchCouponsByPage" resultMap="couponMap">
        SELECT * FROM (
        SELECT ROWNUM AS rnum, C.* FROM (
        SELECT * FROM COUPON
        <where>
            <if test="type == 'couponNo'">
                COUPON_NO = #{keyword}
            </if>
            <if test="type == 'couponName'">
                COUPON_NAME LIKE '%' || #{keyword} || '%'
            </if>
            <if test="type == 'issuer'">
                ISSUER LIKE '%' || #{keyword} || '%'
            </if>
        </where>
        ORDER BY COUPON_NO DESC
        ) C
        WHERE ROWNUM &lt;= #{offset} + #{size}
        )
        WHERE rnum &gt; #{offset}
    </select>

    <!-- ✅ 단일 쿠폰 조회 -->
    <select id="selectCouponByNo" parameterType="int" resultMap="couponMap">
        SELECT * FROM COUPON WHERE COUPON_NO = #{couponNo}
    </select>

    <!-- ✅ 이미 발급한 쿠폰인지 확인 -->
    <select id="countIssuedCoupon" resultType="int">
        SELECT COUNT(*) FROM COUPON_HISTORY
        WHERE COUPON_NO = #{couponNo} AND CUST_NUMBER = #{custNumber}
    </select>

    <!-- ✅ 쿠폰 발급 -->
    <insert id="insertCouponHistoryWithExpire">
        INSERT INTO COUPON_HISTORY (
            HISTORY_NO, COUPON_NO, CUST_NUMBER, ISSUE_DATE, EXPIRE_DATE
        ) VALUES (
                     COUPON_HISTORY_SEQ.NEXTVAL, #{couponNo}, #{custNumber}, #{issueDate}, #{expireDate}
                 )
    </insert>

    <!-- ✅ 발급 개수 증가 -->
    <update id="updateCouponIssueCount">
        UPDATE COUPON
        SET COUPON_ISSUE = COUPON_ISSUE + 1
        WHERE COUPON_NO = #{couponNo}
    </update>

</mapper>
